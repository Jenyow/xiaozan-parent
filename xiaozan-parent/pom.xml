<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.xiaozan</groupId>
	<artifactId>xiaozan-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>xiaozan-parent</name>
	<description>Demo project for Spring Boot</description>

	<!-- Inherit defaults from Spring Boot -->
	<!-- 1、默认编译级别为Java1.6 2、源码编码为UTF-8 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
	</parent>

	<properties>
		<!-- 重新设定使用java1.8编译级别 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<powermock.version>1.7.0RC4</powermock.version>
	</properties>

	<modules>
		<module>xiaozan-hibernate</module>
		<module>xiaozan-utils</module>
		<module>xiaozan-common</module>
		<module>xiaozan-web-jsp</module>
		<module>xiaozan-web-tarro</module>
		<module>xiaozan-web-freemarker</module>
		<module>xiaozan-QRCode</module>
		<module>xiaozan-chardet</module>
		<module>xiaozan-web-xiaozan</module>
	</modules>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 为了创建可执行的jar，需要添加spring-boot-maven-plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source><!-- 源代码使用的开发版本 -->
					<target>1.8</target><!-- 需要生成的目标class文件的编译版本 -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- surefire 插件用来在maven构建生命周期的test phase执行一个应用的单元测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
				    <skipTests>false</skipTests><!-- 是否跳过测试 -->
				    <!-- 默认当测试代码时遇到错误,它会停止编译,需设置如下参数 -->
				    <testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<configuration>

				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>